apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: es-data
  labels:
    component: elasticsearch
    role: data
  namespace: {{ namespace }}
  annotations:
    pod.beta.kubernetes.io/init-containers: '[
      {
      "name": "sysctl",
        "image": "busybox",
        "imagePullPolicy": "IfNotPresent",
        "command": ["sysctl", "-w", "vm.max_map_count=262144"],
        "securityContext": {
          "privileged": true
        }
      }
    ]'
    scheduler.alpha.kubernetes.io/affinity: >
        {
          "nodeAffinity": {
            "preferredDuringSchedulingIgnoredDuringExecution": {
              "nodeSelectorTerms": [
                {
                  "matchExpressions": [
                    {
                      "key": "NodeType",
                      "operator": "In",
                      "values": ["{{ preferred_node }}"]
                    }
                  ]
                }
              ]
            }
          }
        }
spec:
  replicas: 3
  serviceName: "elasticsearch-data"
  template:
    metadata:
      labels:
        component: elasticsearch
        role: data
    spec:
      containers:
      - name: es-data
        resources:
          limits:
            memory: 8Gi
          requests:
            memory: 2Gi
            cpu: "0.1"
        securityContext:
          privileged: false
          capabilities:
            add:
              - IPC_LOCK
              - SYS_RESOURCE
        image: lambdalab/elasticsearch-xpack:5.4.0
        imagePullPolicy: Always
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: "CLUSTER_NAME"
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_MASTER
          value: "false"
        - name: NODE_INGEST
          value: "false"
        - name: HTTP_ENABLE
          value: "false"
        - name: "ES_JAVA_OPTS"
          value: "-Xms8g -Xmx8g"
        - name: "NETWORK_HOST"
          value: "0.0.0.0"
        resources:
          requests:
            memory: 8Gi
        ports:
        - containerPort: 9300
          name: transport
          protocol: TCP
        volumeMounts:
        - name: storage
          mountPath: /data
  volumeClaimTemplates:
  - metadata:
      name: storage
      annotations:
        volume.beta.kubernetes.io/storage-class: "es-data-storage"
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 50Gi


